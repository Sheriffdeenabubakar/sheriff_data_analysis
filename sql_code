use sakila;
SELECT 
    *
FROM
    sakila.inventory;

-- OVERVIEW SECTION 

-- 1 Total Film in the Database

SELECT 
    COUNT(DISTINCT film_id)
FROM
    film;
    

-- 2 Total Revenue from Rentals 
SELECT 
    CONCAT('$', SUM(amount)) AS 'Total Revenue'
FROM
    payment;
    

-- 3 Number of Active Customers
SELECT 
    COUNT(active)
FROM
    customer
WHERE
    active = 1;
    

-- 4 Ten Most Rented Films
SELECT 
    title AS 'Film Title', COUNT(rental_id) AS 'Number of Rents'
FROM
    film F
        LEFT JOIN
    inventory i ON f.film_id = i.film_id
        LEFT JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY title
ORDER BY COUNT(rental_id) DESC
LIMIT 10;


-- 5 Geographic Distribution of Rentals by country
SELECT 
    country AS 'country', COUNT(rental_id) AS 'Nuumber of rents'
FROM
    rental r
        LEFT JOIN
    customer cu ON r.customer_id = cu.customer_id
        LEFT JOIN
    address ad ON ad.address_id = cu.address_id
        LEFT JOIN
    city ci ON ad.city_id = ci.city_id
        LEFT JOIN
    country co ON co.country_id = ci.country_id
GROUP BY country
ORDER BY COUNT(rental_id) desc;



--  SALES SECTION

-- 1 Top 10 Customer Wirh the Highest Number of Rentals 

SELECT 
    CONCAT(first_name, ' ', last_name) AS 'customer\'s Full Name',
    COUNT(rental_id) AS 'Number of Rents'
FROM
    customer c
        LEFT JOIN
    rental r ON c.customer_id = r.customer_id
GROUP BY c.customer_id
ORDER BY COUNT(rental_id) DESC
LIMIT 10;


-- 2 Identify the Most Rented Film 
SELECT 
    title AS 'Film Title', COUNT(rental_id) AS 'Number of Rental'
FROM
    film F
        LEFT JOIN
    inventory i ON f.film_id = i.film_id
        LEFT JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY title
ORDER BY COUNT(rental_id) DESC
LIMIT 1;


-- 3 Average Payment Amount Per Rental
SELECT 
    CONCAT('$',
            CAST(SUM(p.amount) / COUNT(r.rental_id) AS DECIMAL (10 , 2 ))) AS 'Average Amount Per Rental'
FROM
    payment p
        LEFT JOIN
    rental r ON p.rental_id = r.rental_id;
    
    
    -- 4 Most Popular Genre Among Customers
SELECT 
    name AS Genre, COUNT(rental_id) AS 'Number of Rental'
FROM
    rental r
        LEFT JOIN
    inventory i ON r.inventory_id = i.inventory_id
        LEFT JOIN
    film_category fc ON fc.film_id = i.film_id
        LEFT JOIN
    category ca ON ca.category_id = fc.category_id
GROUP BY name
ORDER BY COUNT(rental_id) DESC
LIMIT 1;


-- 5 Top 5 Customer Who Have Spent the Highest Amount on Rentals
SELECT 
    CONCAT(first_name, ' ', last_name) AS "Cutomer's Full Name",
    CONCAT('$', SUM(amount)) AS 'Total Amount on Rentals'
FROM
    payment p
        LEFT JOIN
    rental r ON p.rental_id = r.rental_id
        LEFT JOIN
    customer c ON c.customer_id = r.customer_id
GROUP BY CONCAT(first_name, ' ', last_name)
ORDER BY SUM(amount) DESC
LIMIT 5;


-- 6 Total Number of Rentals Per Month 
SELECT 
    MONTHNAME(payment_date) AS Months,
    COUNT(r.rental_id) AS 'Number of Rental'
FROM
    payment p
        LEFT JOIN
    rental r ON p.rental_id = r.rental_id
GROUP BY MONTHNAME(payment_date);


-- 7  Staff Who Have Processed Highest Number of Payments
SELECT 
    CONCAT(s.first_name, ' ', s.last_name) AS 'Staff\'s Full Name',
    COUNT(p.amount) AS 'Number of Payments Processed'
FROM
    staff s
        LEFT JOIN
    payment p ON s.staff_id = p.staff_id
GROUP BY s.staff_id
ORDER BY COUNT(p.amount) DESC
LIMIT 1;


-- CUSTOMER SECTION 

-- 1 Average Rental Per Customer
SELECT 
    CAST(COUNT(rental_id) / (COUNT(distinct c.customer_id))
        AS DECIMAL (10 , 2 )) AS 'Average Rental Per Customer'
FROM
    rental r
        LEFT JOIN
    customer c ON r.customer_id = c.customer_id;
    
    
    -- 2 Customer Who Have Rented From all Categories
SELECT 
    CONCAT(cu.first_name, ' ', cu.last_name) AS 'Customer Ful Name'
FROM
    customer cu
WHERE
    cu.customer_id IN (SELECT 
            r.customer_id
        FROM
            rental r
                LEFT JOIN
            inventory i ON r.inventory_id = i.inventory_id
                LEFT JOIN
            film_category fc ON i.film_id = fc.film_id
        GROUP BY r.customer_id
        HAVING r.customer_id IN (SELECT 
                COUNT(DISTINCT fc.category_id)
            FROM
                film_category fc));
        
        
-- 3 Customers Who Have Rented the Same Film Multiple Times
SELECT 
    CONCAT(cu.first_name, ' ', cu.last_name) AS 'Customer Full Name',
    f.title AS 'Name of Film'
FROM
    customer cu
        LEFT JOIN
    rental r ON cu.customer_id = r.customer_id
        LEFT JOIN
    inventory i ON i.inventory_id = r.inventory_id
        LEFT JOIN
    film f ON i.film_id = f.film_id
GROUP BY cu.customer_id , f.film_id
HAVING COUNT(*) > 1;
    
    
    
-- 4 top 5 Cutomers by Number of Rents 
SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS 'Customer Name',
    COUNT(r.rental_id) AS 'Number of Rents'
FROM
    customer c
        LEFT JOIN
    rental r ON c.customer_id = r.customer_id
GROUP BY CONCAT(c.first_name, ' ', c.last_name)
ORDER BY COUNT(r.rental_id) DESC
LIMIT 5;
        
        
   -- 5 top 10 Cutomers by Amounts Paid
SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS 'Customer Name',
    COUNT(r.rental_id) AS 'Number of Rental',
    CONCAT('$',
            CAST(SUM(p.amount) AS DECIMAL (10 , 2 ))) AS 'Total Amount Paid'
FROM
    customer c
        LEFT JOIN
    rental r ON c.customer_id = r.customer_id
        LEFT JOIN
    payment p ON r.rental_id = p.rental_id
GROUP BY CONCAT(c.first_name, ' ', c.last_name)
ORDER BY SUM(p.amount) DESC
LIMIT 10;


-- GEOGRAPHIC SECTION 

-- 1 Distribution of Cusomers by Cities
SELECT 
    ci.city AS City,
    COUNT(distinct cu.customer_id) AS 'Number of Customers'
FROM
    customer cu
        LEFT JOIN
    address ad ON cu.address_id = ad.address_id
        LEFT JOIN
    city ci ON ci.city_id = ad.city_id
GROUP BY ci.city
ORDER BY COUNT(DISTINCT cu.customer_id) desc;


-- 2 City with the Highest Number of Customers
SELECT 
    ci.city AS City,
    COUNT(DISTINCT cu.customer_id) AS 'Number of Customers'
FROM
    customer cu
        LEFT JOIN
    address ad ON cu.address_id = ad.address_id
        LEFT JOIN
    city ci ON ci.city_id = ad.city_id
GROUP BY ci.city
ORDER BY COUNT(DISTINCT cu.customer_id) DESC
LIMIT 1;


-- Top 3 Cities with Highest Rental Revenue 
SELECT 
    ci.city AS City,
    CONCAT('$', SUM(p.amount)) AS 'Rental Revenue'
FROM
    country co
        LEFT JOIN
    city ci ON co.country_id = ci.country_id
        LEFT JOIN
    address ad ON ci.city_id = ad.city_id
        LEFT JOIN
    customer cu ON cu.address_id = ad.address_id
        LEFT JOIN
    rental r ON r.customer_id = cu.customer_id
        LEFT JOIN
    payment p ON p.rental_id = r.rental_id
GROUP BY ci.city_id
ORDER BY SUM(p.amount) DESC
LIMIT 10;


-- 4 Country With the Most Active Active Customers         

SELECT 
    co.country AS 'Country',
    COUNT(cu.active) 'Number of Active Customers'
FROM
    customer cu
        LEFT JOIN
    address a ON cu.address_id = a.address_id
        LEFT JOIN
    city ci ON a.city_id = ci.city_id
        LEFT JOIN
    country co ON co.country_id = ci.country_id
WHERE
    cu.active = 1
GROUP BY co.country
ORDER BY COUNT(cu.active) DESC
LIMIT 1;


-- 5 Average Rental Duration Per country
SELECT 
    co.country AS 'Country',
    CAST((SUM(f.rental_duration)) / (COUNT(DISTINCT r.rental_id))
        AS DECIMAL (10 , 2 )) AS 'Average Rental Duration (Days)'
FROM
    country co
        LEFT JOIN
    city ci ON co.country_id = ci.country_id
        LEFT JOIN
    address ad ON ad.city_id = ci.city_id
        LEFT JOIN
    customer cu ON cu.address_id = ad.address_id
        LEFT JOIN
    rental r ON r.customer_id = cu.customer_id
        LEFT JOIN
    inventory i ON i.inventory_id = r.inventory_id
        LEFT JOIN
    film f ON i.film_id = f.film_id
GROUP BY co.country;
        
        
-- 6 Average Rental Duration Per city
SELECT 
    ci.city AS 'City',
    CAST((SUM(f.rental_duration)) / (COUNT(DISTINCT r.rental_id))
        AS DECIMAL (10 , 2 )) AS 'Average Rental Duration (Days)'
FROM
    country co
        LEFT JOIN
    city ci ON co.country_id = ci.country_id
        LEFT JOIN
    address ad ON ad.city_id = ci.city_id
        LEFT JOIN
    customer cu ON cu.address_id = ad.address_id
        LEFT JOIN
    rental r ON r.customer_id = cu.customer_id
        LEFT JOIN
    inventory i ON i.inventory_id = r.inventory_id
        LEFT JOIN
    film f ON i.film_id = f.film_id
GROUP BY ci.city;
        
	
-- 7 Average Paymnet Per country
SELECT 
    co.country AS 'Country',
    CONCAT('$',
            CAST((SUM(p.amount)) / (COUNT(DISTINCT co.country_id))
                AS DECIMAL (10 , 2 ))) AS 'Average Rental Revenue'
FROM
    country co
        LEFT JOIN
    city ci ON co.country_id = ci.country_id
        LEFT JOIN
    address ad ON ad.city_id = ci.city_id
        LEFT JOIN
    customer cu ON cu.address_id = ad.address_id
        LEFT JOIN
    rental r ON r.customer_id = cu.customer_id
        LEFT JOIN
    inventory i ON i.inventory_id = r.inventory_id
        LEFT JOIN
    film f ON i.film_id = f.film_id
        LEFT JOIN
    payment p ON r.rental_id = p.rental_id
GROUP BY co.country;
        
        
-- 8 Average Paymnet Per city
SELECT 
    ci.city AS 'City',
    CONCAT('$',
            CAST((SUM(p.amount)) / (COUNT(DISTINCT ci.city_id))
                AS DECIMAL (10 , 2 ))) AS 'Average Rental Revenue'
FROM
    country co
        LEFT JOIN
    city ci ON co.country_id = ci.country_id
        LEFT JOIN
    address ad ON ad.city_id = ci.city_id
        LEFT JOIN
    customer cu ON cu.address_id = ad.address_id
        LEFT JOIN
    rental r ON r.customer_id = cu.customer_id
        LEFT JOIN
    inventory i ON i.inventory_id = r.inventory_id
        LEFT JOIN
    film f ON i.film_id = f.film_id
        LEFT JOIN
    payment p ON r.rental_id = p.rental_id
GROUP BY ci.city;



-- INVENTORY SECTION 


 -- 1  All Categories of Films
SELECT 
    ca.category_id AS 'Category ID', name AS 'Category of Film'
FROM
    category ca
        LEFT JOIN
    film_category fc ON ca.category_id = fc.category_id
GROUP BY ca.category_id , 'Category of Film';
 
 
 -- 2 Films That Have Not been Rented Yet
SELECT 
    film_id AS 'Film ID', title AS 'Film Title'
FROM
    film
WHERE
    film_id NOT IN (SELECT 
            i.film_id
        FROM
            inventory i);
 


-- 3 Film That Has Been Rented The Least Number of Times 

SELECT 
			f.title AS "Film Title",
			i.film_id,
            COUNT(r.rental_id) AS "Number of Rentals"
        FROM
            rental r
                LEFT JOIN
            inventory i ON r.inventory_id = i.inventory_id
				LEFT JOIN 
			film f ON f.film_id = i.film_id
        GROUP BY i.film_id
        ORDER BY COUNT(rental_id)
        LIMIT 1;


-- 4 Film That Has Been Rented The Highest Number of Times 

SELECT 
			f.title AS "Film Title",
			i.film_id,
            COUNT(r.rental_id) AS "Number of Rentals"
        FROM
            rental r
                LEFT JOIN
            inventory i ON r.inventory_id = i.inventory_id
				LEFT JOIN 
			film f ON f.film_id = i.film_id
        GROUP BY i.film_id
        ORDER BY COUNT(rental_id) DESC
        LIMIT 1;



-- 5 Films That Have a Rental Rate Higher Than The Average
SELECT 
    film_id, title
FROM
    film
WHERE
    rental_rate > (SELECT 
            SUM(rental_rate) / COUNT(DISTINCT film_id)
        FROM
            film);








           


